#!/bin/bash

set -euo pipefail

cd "$(dirname "$0")"


TEMP_CONVERSION_DIR=sound
C_FILE=sound_data.c
HEADER_FILE=sound_data.h

AUDIO_FORMAT=pcm_u16le
SAMPLE_RATE=16000
CHANNELS=1


echo ">> Cleaning up"
[ -d "$TEMP_CONVERSION_DIR" ] && rm -r "$TEMP_CONVERSION_DIR"
[ -f "$HEADER_FILE" ] && rm "$HEADER_FILE"
[ -f "$C_FILE" ] && rm "$C_FILE"


mkdir "$TEMP_CONVERSION_DIR"

echo -e "#pragma once\n" >> "$HEADER_FILE"

cat <<EOF | tee -a "$HEADER_FILE" "$C_FILE" > /dev/null
// This file is generated by tools/make_audio_header.

// These are raw audio samples in $AUDIO_FORMAT format.
// Sample rate: $SAMPLE_RATE

#include "sdkconfig.h"
#if !CONFIG_TARGET_PHONE


EOF


for f in *.wav; do
    echo ">> Processing $f"

    output="$TEMP_CONVERSION_DIR/$(basename "$f" .wav)_samples"
    ffmpeg -loglevel error -i "$f" -acodec $AUDIO_FORMAT -ac $CHANNELS -ar $SAMPLE_RATE -map 0:a -f data "$output"

    echo "// $f" >> "$C_FILE"
    xxd -i "$output" | sed 's/^unsigned/const unsigned/' >> "$C_FILE"
    echo -e "\n" >> "$C_FILE"
done


echo ">> Generating header"
cat "$C_FILE" | perl -ne '/(const unsigned (char|int) .*) =/ && print "extern $1;\n"' >> "$HEADER_FILE"


cat <<EOF | tee -a "$HEADER_FILE" "$C_FILE" > /dev/null


#endif


EOF


# To work around an I2S bug, we need 1 sample of silence in the above format
echo ">> Generating silence"

silence_file="$TEMP_CONVERSION_DIR/silence_sample"
ffmpeg -loglevel error -ar $SAMPLE_RATE -f s16le -acodec pcm_s16le -ac 2 -i /dev/zero -acodec $AUDIO_FORMAT -ac $CHANNELS -map 0:a -f data -af 'atrim=end_sample=1' "$silence_file"

echo "// Silence template" >> "$C_FILE"
xxd -i "$silence_file" | sed 's/^unsigned/const unsigned/' >> "$C_FILE"


cat <<EOF | tee -a "$HEADER_FILE" > /dev/null
extern const unsigned char sound_silence_sample[];
extern const unsigned int sound_silence_sample_len;
EOF



echo ">> Cleaning up"
rm -r "$TEMP_CONVERSION_DIR"


echo
echo "üëç  All done!"
echo "Results are in $C_FILE and $HEADER_FILE"